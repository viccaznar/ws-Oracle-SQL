Traduza o texto para português. Resuma a resposta. Tópicos objetivos. Insira e explique todos detalhes comentados. criar uma consulta eficiente para provas e exames de cursos. Inclua um exemplo lúdico para cada explicação. Coloque tudo em um bloco no formato Markdown. Em um segundo bloco, explique todas as denominações, conceitos, ou ações que aparecem no texto. Adicione mais emoticons para uma resposta mais simpática:

MySQL is continually being improved, so you may want to upgrade one day. In this section, we'll go over some of the key upgrade points. When you upgrade MySQL, you have to bring the server down so that the upgrade process can replace all of the relevant binary executable files. And if necessary, update the data in configuration to suit the new software.

The safest thing to do is to backup your whole MySQL environment. This includes not only your data in the files, such as binaries and configuration files, but also logical elements, including triggers, stored procedures, user configuration, and anything else that's required to rebuild your system. The upgrade process gives you two main options. An in-place upgrade uses your existing data directory. After you shut down your MySQL server process, you either replace the package or binaries with new versions, or you install the new binary executables in a new location and point your symbolic links to this new location. The server process detects that the data directory belongs to an earlier version and performs any required upgrade checks.

Alternatively, you can perform a logical upgrade. To do this, you backup your existing server. Install the new software version as a fresh installation with a clean data directory. And then restore the backup to that server. You'll also need to upgrade supporting files, especially any files that your application uses to connect to MySQL.

If the application includes the connector in its binary code through step-- repeat-- through a static linking, you'll need to recompile those applications. For dynamically-linked connector code, you can upgrade as long as the application can be used with different library versions.

If you perform a logical upgrade, you can continue using the source system during the upgrade process. After restoring the backup to the new system, you can configure the replication between the two systems. And once the new system has caught up, you can configure the application to talk to the new system. This can reduce your application downtime considerably.

The process is very similar when you upgrade from Community Edition to Enterprise Edition. First, you download the Enterprise Edition software. Make sure that the Enterprise Edition version that you get is the same as the version as the Community Edition that you already have installed. That way, you won't need to perform any additional upgrade steps.

Then you shut down your server process. Remove the community binary files. Replace them with the newly downloaded enterprise binaries. And finally, simply restart the server process. If you have used the same version, then no additional steps are required.

For each version, MySQL Shell includes a utility function that you can run against a server on an earlier version. When you call the check for server upgrade function, you include the target version in the configuration file that you want to check. The upgrade checker verifies that the source database does not have any identifiers that use reserved keywords. Also, that your data hasn't been defined with any data types that are no longer used, and whether the configuration specifies any variable parameters that no longer exist or that have changed default values.

The upgrade checker does not check for any deprecated function use. Repeat, any deprecated function use or for-- repeat-- or for geographical information system changes. The user who performs the upgrade check must have at least the RELOAD, the PROCESS, and the SELECT privileges on their system.

Having completed this module, you should now understand how to prepare your environment and software for MySQL installation; how to install MySQL on Linux or Windows operating system using package manager or binary archive; also, how to configure MySQL in your operating system with secure initial accounts. Next, how to get the MySQL configuration ready to start the server process. Finally, how to upgrade MySQL between versions or between editions. That brings us to the end of this module on MySQL Enterprise Edition.